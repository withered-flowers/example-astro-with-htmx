---
export const partial = true;

type Todo = {
  id: number;
  userId: number;
  title: string;
  completed: boolean;
};

let todoId;
let todoData: Todo | undefined = undefined;
let todoErrMsg: string | undefined = undefined;

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  todoId = formData.get("todo-id") as string;

  try {
    if (isNaN(Number(todoId))) {
      throw new Error(`Todo id: ${todoId} is not a number`);
    }

    const response = await fetch(
      `https://jsonplaceholder.typicode.com/todos/${todoId}`,
    );
    todoData = await response.json();

    if (!todoData || Object.keys(todoData).length === 0) {
      throw new Error(`Todo with id: ${todoId} not found`);
    }
  } catch (err) {
    if (err instanceof Error) {
      todoErrMsg = err.message;
    }
  }
}
---

<section class="mt-4">
  <p class="mb-4">Partial Page (Todo Detail) - {todoId}</p>
  <p>Dynamic Data (fetched from JSONPlaceholder - todos)</p>
  {todoErrMsg && <p class="text-red-400 animate-pulse">Error: {todoErrMsg}</p>}
  {todoData && !todoErrMsg && <pre>{JSON.stringify(todoData)}</pre>}
</section>
